[gd_scene load_steps=11 format=1]

[ext_resource path="res://friend.tex" type="Texture" id=1]

[sub_resource type="ConvexPolygonShape2D" id=1]

custom_solver_bias = 0.0
points = Vector2Array( 39.6392, -6.52423, 48.4941, -5.93952, 39.6392, -4.83506 )

[sub_resource type="ConvexPolygonShape2D" id=2]

custom_solver_bias = 0.0
points = Vector2Array( 0.899353, -4.90003, -6.84863, -5.93952, 3.11307, -6.52423, 13.0747, -5.28984 )

[sub_resource type="ConvexPolygonShape2D" id=3]

custom_solver_bias = 0.0
points = Vector2Array( 28.5707, -5.3548, 13.0747, -5.28984, 3.11307, -6.52423, 5.32678, -8.14842, 18.609, -9.51274, 34.105, -8.21339 )

[sub_resource type="ConvexPolygonShape2D" id=4]

custom_solver_bias = 0.0
points = Vector2Array( 39.6392, -4.83506, 28.5707, -5.3548, 34.105, -8.21339, 39.6392, -6.52423 )

[sub_resource type="ConvexPolygonShape2D" id=5]

custom_solver_bias = 0.0
points = Vector2Array( 39.6392, -6.52423, 48.4941, -5.93952, 39.6392, -4.83506 )

[sub_resource type="ConvexPolygonShape2D" id=6]

custom_solver_bias = 0.0
points = Vector2Array( 0.899353, -4.90003, -6.84863, -5.93952, 3.11307, -6.52423, 13.0747, -5.28984 )

[sub_resource type="ConvexPolygonShape2D" id=7]

custom_solver_bias = 0.0
points = Vector2Array( 28.5707, -5.3548, 13.0747, -5.28984, 3.11307, -6.52423, 5.32678, -8.14842, 18.609, -9.51274, 34.105, -8.21339 )

[sub_resource type="ConvexPolygonShape2D" id=8]

custom_solver_bias = 0.0
points = Vector2Array( 39.6392, -4.83506, 28.5707, -5.3548, 34.105, -8.21339, 39.6392, -6.52423 )

[sub_resource type="GDScript" id=9]

script/source = "extends RigidBody2D

var multi_forward = 50;
var multi_rot = 200;
export (NodePath) var health_label;

func _ready():
	# Called every time the node is added to the scene.
	# Initialization here
	set_fixed_process(true)
	set_max_contacts_reported(1)
	
	connect(\"body_enter\", self, \"processCollision\")
	pass

func _fixed_process(delta):
	#print(\"_fixed_process\", get_colliding_bodies())
	processInput(delta)

func processCollision(obstacle):
	print(\"processCollision \", obstacle.get_name())

func processInput(delta):
	var speed = 0
	var rot = 0;
	
	# get input from keyboard
	if Input.is_action_pressed(\"ui_left\"): rot -= delta*multi_rot
	if Input.is_action_pressed(\"ui_right\"): rot += delta*multi_rot
	if Input.is_action_pressed(\"ui_up\"): speed -= delta*multi_forward
	if Input.is_action_pressed(\"ui_down\"): speed += delta*multi_forward
	
	# rotate only if there is something to rotate
	if rot != 0 :
		set_angular_velocity(rot)
	
	# calculate vecotr from current rotation, if speed is set
	if speed != 0 :
		var direction = Vector2(sin(get_rot()), cos(get_rot()))
		apply_impulse(Vector2(0,0), direction * multi_forward * delta * speed)
	
	\"\"\"
	var movevector = Vector2(0,0)
	if Input.is_action_pressed(\"ui_left\"): movevector.x -= delta*multi
	if Input.is_action_pressed(\"ui_right\"): movevector.x += delta*multi
	if Input.is_action_pressed(\"ui_up\"): movevector.y -= delta*multi
	if Input.is_action_pressed(\"ui_down\"): movevector.y += delta*multi
	
	if(movevector != Vector2(0,0)):
		#add_force( get_pos(), movevector )
		apply_impulse(Vector2(0,0), movevector)
	\"\"\"
"

[node name="Player" type="RigidBody2D"]

transform/pos = Vector2( 469, 257 )
input/pickable = false
shapes/0/shape = SubResource( 1 )
shapes/0/transform = Matrix32( 0.903462, 0, 0, 15.3922, -18.8125, 118.422 )
shapes/0/trigger = false
shapes/1/shape = SubResource( 2 )
shapes/1/transform = Matrix32( 0.903462, 0, 0, 15.3922, -18.8125, 118.422 )
shapes/1/trigger = false
shapes/2/shape = SubResource( 3 )
shapes/2/transform = Matrix32( 0.903462, 0, 0, 15.3922, -18.8125, 118.422 )
shapes/2/trigger = false
shapes/3/shape = SubResource( 4 )
shapes/3/transform = Matrix32( 0.903462, 0, 0, 15.3922, -18.8125, 118.422 )
shapes/3/trigger = false
shapes/4/shape = SubResource( 5 )
shapes/4/transform = Matrix32( 0.903462, 0, 0, 15.3922, -18.8125, 118.422 )
shapes/4/trigger = false
shapes/5/shape = SubResource( 6 )
shapes/5/transform = Matrix32( 0.903462, 0, 0, 15.3922, -18.8125, 118.422 )
shapes/5/trigger = false
shapes/6/shape = SubResource( 7 )
shapes/6/transform = Matrix32( 0.903462, 0, 0, 15.3922, -18.8125, 118.422 )
shapes/6/trigger = false
shapes/7/shape = SubResource( 8 )
shapes/7/transform = Matrix32( 0.903462, 0, 0, 15.3922, -18.8125, 118.422 )
shapes/7/trigger = false
collision/layers = 1
collision/mask = 1
mode = 0
mass = 0.102432
friction = 1.0
bounce = 0.5
gravity_scale = 0.0
custom_integrator = false
continuous_cd = 2
contacts_reported = 0
contact_monitor = true
sleeping = false
can_sleep = true
velocity/linear = Vector2( 0, 0 )
velocity/angular = 0.0
damp_override/linear = 0.0
damp_override/angular = 5.0
script/script = SubResource( 9 )
health_label = null

[node name="Sprite" type="Sprite" parent="."]

transform/pos = Vector2( 0, 20 )
transform/rot = -90.0
transform/scale = Vector2( 0.1, 0.1 )
texture = ExtResource( 1 )

[node name="CollisionPolygon2D" type="CollisionPolygon2D" parent="."]

transform/pos = Vector2( -18.8125, 118.422 )
transform/scale = Vector2( 0.903462, 15.3922 )
build_mode = 0
polygon = Vector2Array( 5.32678, -8.14842, 18.609, -9.51274, 34.105, -8.21339, 39.6392, -6.52423, 48.4941, -5.93952, 39.6392, -4.83506, 28.5707, -5.3548, 13.0747, -5.28984, 0.899353, -4.90003, -6.84863, -5.93952, 3.11307, -6.52423 )
shape_range = Vector2( 0, 3 )
trigger = false


